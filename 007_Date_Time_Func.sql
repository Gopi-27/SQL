-- DATE AND TIME FUNCTIONS
-- ORACLE'S 'DATE' DATA TYPE NOT ONLY HOLDS DATE IT ALSO HOLDS TIME

-- SYSDATE ==> RETURNS THE DATE BASED ON THE TIMEZONE OF SERVER OF DATABASE
-- CURRENT_DATE ==> RETURNS THE DATE BASED ON THE TIMEZONE SET TO PARTICULAR SESSION OF THE DATA BASE SESSION PARAMETERS

-- DATE(DATA TYPE) ==> DATE & TIME
-- TO_CHAR() ==> USED TO CONVERT A DATA INTO STRING, BASED ON A FORMAT MASK 


SELECT SYSDATE FROM dual;

SELECT CURRENT_DATE FROM dual;

SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD') FROM dual; -- > 'YEAR-MONTH-DAY'

SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD HH12:MI:SS AM') FROM dual; -- > 'YEAR-MONTH-DAY HOURS(12 HOURS):MINUTES: SECONDS AM'


SELECT DBTIMEZONE FROM dual; -- GMT/UTC
SELECT SESSIONTIMEZONE  FROM dual;


SELECT TO_CHAR(CURRENT_DATE, 'YYYY-MM-DD HH24:MI:SS')
FROM dual; -- Session time

-- SUBTRACT TWO DATES AND CAN GET HOW MANY DAYS ARE PRESENT IN BETWEEEN TWO DATES

SELECT
    TO_DATE('2025-08-02 13:35:07', 'YYYY-MM-DD HH24:MI:SS')
    -
    TO_DATE('2025-08-01 12:25:04', 'YYYY-MM-DD HH24:MI:SS')
FROM dual;

-- 1 DAY 1 HOURS 10 MINUTES 3 SECONDS
-- 3600 + 600 + 3 == > 4203 SECONDS

-- borrowal_date, return_date

-- TO_DATE() ==> USED TO CONVERT A STRING INTO A DATE BASED ON FORMAT MASK
-- TO_CHAR() ==> USED TO CONVERT A DATE INTO STRING BASED ON FORMAT MASK

SELECT TO_CHAR(CURRENT_DATE, 'YYYY-MON-DD') FROM dual; --> MONTH LIKE JAN,FEB,MAR,APR,....
SELECT TO_CHAR(CURRENT_DATE, 'YYYY-MONTH-DD') FROM dual; --> MONTH WITH FULL NAME
SELECT TO_CHAR(CURRENT_DATE, 'YYYY') FROM dual; --> ONLY YEAR
SELECT TO_CHAR(CURRENT_DATE, 'MM') FROM dual; -- > ONLY MONTH NUMBER
SELECT TO_CHAR(CURRENT_DATE, 'MON') FROM dual; --> ONLY MONTH LIKE JAN,FEB,MAR,...
SELECT TO_CHAR(CURRENT_DATE, 'MONTH') FROM dual; --> ONLY FULL NAME OF THE MONTH
SELECT TO_CHAR(CURRENT_DATE, 'DD') FROM dual;--> ONLY DAY
SELECT TO_CHAR(CURRENT_DATE, 'Day') FROM dual; --> ONLY NAME OF THE DAY
SELECT TO_CHAR(CURRENT_DATE, 'HH') FROM dual; --> HOURS
SELECT TO_CHAR(CURRENT_DATE, 'MI') FROM dual; --> MINUTES
SELECT TO_CHAR(CURRENT_DATE, 'SS') FROM dual; -->SECONDS


-- HOW MANY ORDERS WERE PLACE IN THE YEAR 2022 ?
-- WAY 1:
SELECT COUNT(*) AS order_count FROM
orders
WHERE
order_date >= TO_DATE('01-01-2022', 'DD-MM-YYYY')
and order_date <= TO_DATE('31-12-2022', 'DD-MM-YYYY');

-- WAY 2:
SELECT COUNT(*) AS order_count FROM
orders
WHERE TO_CHAR(order_date, 'YYYY') = 2022;

-- FIND OUT HOW MANY ORDERS ARE PLACE IN THE MONTH OF NOVEMBER ?
SELECT COUNT(*) AS order_count FROM
orders
WHERE TO_CHAR(order_date, 'MM') = 11;


-- EXTRACT():
-- USED TO EXTRACT SPECIFIC PARTS (YEAR,MONTH,DAY) FROM A DATE. 

-- 1. EXTRACT YEAR FROM DATE
SELECT EXTRACT(YEAR FROM CURRENT_DATE) FROM dual;
-- 2. EXTRACT MONTH FROM DATE
SELECT EXTRACT(MONTH FROM CURRENT_DATE) FROM dual;
-- 3. EXTRACT DAY FROM CURRENT DATE
SELECT EXTRACT(DAY FROM SYSDATE)  FROM dual;

-- ADD_MONTHS():
-- USED TO ADD OR SUBTRACT MONTHS FROM A GIVEN DATE.
-- 1. ADD 6 MONTHS TO CURRENT DATE
SELECT ADD_MONTHS(SYSDATE, 6) FROM dual;
-- 2. SUBTRACT 3 MONTHS FROM HIRE DATE
SELECT ADD_MONTHS(SYSDATE, -3) FROM dual;
-- 3.FIND NEXT YEAR'S SAME MONTH
SELECT ADD_MONTHS(SYSDATE, 12)  FROM dual;

-- LAST_DAY():
-- RETURNS THE LAST DATE OF THE MONTH FOR A GIVEN DATE

-- 1. LAST DAY OF CURRENT MONTH
SELECT LAST_DAY(SYSDATE) FROM dual;
-- 2. LAST DAY OF THE 2nd MONTH IN LEAP YEAR
SELECT LAST_DAY(TO_DATE('12-02-2024','DD-MM-YYYY'))  FROM dual;
-- 3. LAST DAY OF DECEMBER 2050
SELECT LAST_DAY(TO_DATE('15-DEC-2050', 'DD-MON-YYYY')) FROM dual;


-- MONTHS_BETWEEN():
-- CALCULATES THE NUMBER OF MONTHS BETWEEN TWO DATES

-- 1. MONTHS BETWEEN TWO FIXED DATES
SELECT MONTHS_BETWEEN(TO_DATE('01-JAN-2025','DD-MON-YYYY'),TO_DATE('01-JAN-2024','DD-MON-YYYY')) FROM dual; -- 12
SELECT MONTHS_BETWEEN(TO_DATE('31-JAN-2025','DD-MON-YYYY'),TO_DATE('01-JAN-2024','DD-MON-YYYY')) FROM dual; -- 12.95

-- NEXT_DAY():
-- RETURNS THE NEXT OCCURRENCE OF A SPECIFIC WEEKDAY AFTER A GIVEN DATE
-- SUN -> 1, MON -> 2, TUE -> 3 ETC,,.

SELECT NEXT_DAY(SYSDATE,1) FROM dual; -- NEXT SUNDAY DATE
SELECT NEXT_DAY(SYSDATE,'MON') FROM dual; -- NEXT MONDAY DATE

